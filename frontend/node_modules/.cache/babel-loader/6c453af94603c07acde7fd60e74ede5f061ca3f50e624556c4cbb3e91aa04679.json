{"ast":null,"code":"var _jsxFileName = \"/home/muaze/mini-project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize axios instance with interceptors\n  const axiosInstance = axios.create({\n    baseURL: API_URL,\n    withCredentials: true // Required for cookies\n  });\n\n  // Add request interceptor to add authorization token\n  axiosInstance.interceptors.request.use(config => {\n    if (accessToken) {\n      config.headers.Authorization = `Bearer ${accessToken}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Add response interceptor to handle token expiration and refreshing\n  axiosInstance.interceptors.response.use(response => response, async error => {\n    var _error$response;\n    const originalRequest = error.config;\n\n    // If error is not 401 or request has already been retried, reject\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 401 || originalRequest._retry) {\n      return Promise.reject(error);\n    }\n    originalRequest._retry = true;\n    try {\n      // Try to refresh the token\n      const response = await axios.post(`${API_URL}/api/auth/refresh-token`, {}, {\n        withCredentials: true\n      });\n      const {\n        accessToken: newAccessToken\n      } = response.data.data;\n      setAccessToken(newAccessToken);\n\n      // Retry the original request with new token\n      originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n      return axios(originalRequest);\n    } catch (refreshError) {\n      // If refresh fails, logout user\n      logout();\n      return Promise.reject(refreshError);\n    }\n  });\n\n  // Load user from storage and validate token\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem(\"accessToken\");\n      if (storedToken) {\n        setAccessToken(storedToken);\n        try {\n          const response = await axiosInstance.get(\"/api/auth/me\");\n          setUser(response.data.data.user);\n        } catch (error) {\n          localStorage.removeItem(\"accessToken\");\n          setAccessToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, [axiosInstance]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await axiosInstance.post(\"/api/auth/register\", userData);\n      const {\n        user,\n        accessToken\n      } = response.data.data;\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      setUser(user);\n      return user;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\");\n      throw error;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axiosInstance.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      const {\n        user,\n        accessToken\n      } = response.data.data;\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      setUser(user);\n      return user;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Login failed\");\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = useCallback(async () => {\n    try {\n      await axiosInstance.post(\"/api/auth/logout\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"accessToken\");\n      setAccessToken(null);\n      setUser(null);\n    }\n  }, [axiosInstance]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Co/OEVEFfwP+Ok6M+VmxDbIycPo=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useCallback","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","accessToken","setAccessToken","loading","setLoading","error","setError","axiosInstance","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","Promise","reject","response","_error$response","originalRequest","status","_retry","post","newAccessToken","data","refreshError","logout","initializeAuth","storedToken","localStorage","getItem","get","removeItem","register","userData","setItem","_error$response2","_error$response2$data","message","login","email","password","_error$response3","_error$response3$data","console","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/muaze/mini-project/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize axios instance with interceptors\n  const axiosInstance = axios.create({\n    baseURL: API_URL,\n    withCredentials: true, // Required for cookies\n  });\n\n  // Add request interceptor to add authorization token\n  axiosInstance.interceptors.request.use(\n    (config) => {\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`;\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  // Add response interceptor to handle token expiration and refreshing\n  axiosInstance.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n      const originalRequest = error.config;\n\n      // If error is not 401 or request has already been retried, reject\n      if (error.response?.status !== 401 || originalRequest._retry) {\n        return Promise.reject(error);\n      }\n\n      originalRequest._retry = true;\n\n      try {\n        // Try to refresh the token\n        const response = await axios.post(`${API_URL}/api/auth/refresh-token`, {}, { withCredentials: true });\n        const { accessToken: newAccessToken } = response.data.data;\n\n        setAccessToken(newAccessToken);\n\n        // Retry the original request with new token\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n        return axios(originalRequest);\n      } catch (refreshError) {\n        // If refresh fails, logout user\n        logout();\n        return Promise.reject(refreshError);\n      }\n    }\n  );\n\n  // Load user from storage and validate token\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const storedToken = localStorage.getItem(\"accessToken\");\n      if (storedToken) {\n        setAccessToken(storedToken);\n        try {\n          const response = await axiosInstance.get(\"/api/auth/me\");\n          setUser(response.data.data.user);\n        } catch (error) {\n          localStorage.removeItem(\"accessToken\");\n          setAccessToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, [axiosInstance]);\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      setError(null);\n      const response = await axiosInstance.post(\"/api/auth/register\", userData);\n      const { user, accessToken } = response.data.data;\n\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      setUser(user);\n\n      return user;\n    } catch (error) {\n      setError(error.response?.data?.message || \"Registration failed\");\n      throw error;\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axiosInstance.post(\"/api/auth/login\", { email, password });\n      const { user, accessToken } = response.data.data;\n\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      setUser(user);\n\n      return user;\n    } catch (error) {\n      setError(error.response?.data?.message || \"Login failed\");\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = useCallback(async () => {\n    try {\n      await axiosInstance.post(\"/api/auth/logout\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"accessToken\");\n      setAccessToken(null);\n      setUser(null);\n    }\n  }, [axiosInstance]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        isAuthenticated: !!user,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}