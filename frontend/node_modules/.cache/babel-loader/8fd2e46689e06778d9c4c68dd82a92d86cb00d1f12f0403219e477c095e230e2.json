{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/muaze/mini-project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem(\"accessToken\");\n        if (storedToken) {\n          setAccessToken(storedToken);\n          // Fetch user data with the stored token\n          const response = await axios.get(`${API_URL}/api/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${storedToken}`\n            }\n          });\n          setUser(response.data.data.user);\n        }\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error);\n        // Clear invalid token\n        localStorage.removeItem(\"accessToken\");\n        setAccessToken(null);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await axios.post(`${API_URL}/api/auth/register\", userData)\n      const { user, accessToken: token } = response.data.data\n\n      localStorage.setItem(\"accessToken\", token)\n      setAccessToken(token)\n      setUser(user)\n\n      return user\n    } catch (error) {\n      setError(error.response?.data?.message || \"Registration failed\")\n      throw error\n    }\n  }\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null)\n      const response = await axios.post(\n        \\`${API_URL}/api/auth/login`, {\n        email,\n        password\n      }, {\n        withCredentials: true\n      });\n      const {\n        user,\n        accessToken: token\n      } = response.data.data;\n      localStorage.setItem(\"accessToken\", token);\n      setAccessToken(token);\n      setUser(user);\n      return user;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n      throw error;\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await axios.post(`${API_URL}/api/auth/logout`, {}, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        },\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"accessToken\");\n      setAccessToken(null);\n      setUser(null);\n    }\n  };\n\n  // Create axios instance with auth header\n  const authAxios = axios.create({\n    baseURL: API_URL,\n    withCredentials: true\n  });\n\n  // Add auth header to requests\n  authAxios.interceptors.request.use(config => {\n    if (accessToken) {\n      config.headers.Authorization = `Bearer ${accessToken}`;\n    }\n    return config;\n  }, error => {\n    return Promise.reject(error);\n  });\n\n  // Handle 401 responses\n  authAxios.interceptors.response.use(response => response, async error => {\n    var _error$response2;\n    const originalRequest = error.config;\n    if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        // Try to refresh the token\n        const response = await axios.post(`${API_URL}/api/auth/refresh-token`, {}, {\n          withCredentials: true\n        });\n        const {\n          accessToken: newToken\n        } = response.data.data;\n        localStorage.setItem(\"accessToken\", newToken);\n        setAccessToken(newToken);\n\n        // Retry the original request with new token\n        originalRequest.headers.Authorization = `Bearer ${newToken}`;\n        return authAxios(originalRequest);\n      } catch (refreshError) {\n        // If refresh fails, logout user\n        logout();\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      accessToken,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      isAuthenticated: !!accessToken,\n      authAxios\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"hTnLCdo3W2N1uYQ0VwKav2MHcCg=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","accessToken","setAccessToken","loading","setLoading","error","setError","initializeAuth","storedToken","localStorage","getItem","response","get","headers","Authorization","data","console","removeItem","register","userData","post","email","password","withCredentials","token","setItem","_error$response","_error$response$data","message","logout","authAxios","create","baseURL","interceptors","request","use","config","Promise","reject","_error$response2","originalRequest","status","_retry","newToken","refreshError","Provider","value","login","isAuthenticated","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/muaze/mini-project/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { API_URL } from \"../config\"\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [accessToken, setAccessToken] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const storedToken = localStorage.getItem(\"accessToken\")\n        if (storedToken) {\n          setAccessToken(storedToken)\n          // Fetch user data with the stored token\n          const response = await axios.get(`${API_URL}/api/auth/me`, {\n            headers: {\n              Authorization: `Bearer ${storedToken}`,\n            },\n          })\n          setUser(response.data.data.user)\n        }\n      } catch (error) {\n        console.error(\"Auth initialization error:\", error)\n        // Clear invalid token\n        localStorage.removeItem(\"accessToken\")\n        setAccessToken(null)\n        setUser(null)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    initializeAuth()\n  }, [])\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      setError(null)\n      const response = await axios.post(\n        `${API_URL}/api/auth/register\", userData)\n      const { user, accessToken: token } = response.data.data\n\n      localStorage.setItem(\"accessToken\", token)\n      setAccessToken(token)\n      setUser(user)\n\n      return user\n    } catch (error) {\n      setError(error.response?.data?.message || \"Registration failed\")\n      throw error\n    }\n  }\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null)\n      const response = await axios.post(\n        \\`${API_URL}/api/auth/login`,\n        { email, password },\n        { withCredentials: true },\n      )\n      const { user, accessToken: token } = response.data.data\n\n      localStorage.setItem(\"accessToken\", token)\n      setAccessToken(token)\n      setUser(user)\n\n      return user\n    } catch (error) {\n      setError(error.response?.data?.message || \"Login failed\")\n      throw error\n    }\n  }\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await axios.post(\n        `${API_URL}/api/auth/logout`,\n        {},\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n          withCredentials: true,\n        },\n      )\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    } finally {\n      localStorage.removeItem(\"accessToken\")\n      setAccessToken(null)\n      setUser(null)\n    }\n  }\n\n  // Create axios instance with auth header\n  const authAxios = axios.create({\n    baseURL: API_URL,\n    withCredentials: true,\n  })\n\n  // Add auth header to requests\n  authAxios.interceptors.request.use(\n    (config) => {\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`\n      }\n      return config\n    },\n    (error) => {\n      return Promise.reject(error)\n    },\n  )\n\n  // Handle 401 responses\n  authAxios.interceptors.response.use(\n    (response) => response,\n    async (error) => {\n      const originalRequest = error.config\n\n      if (error.response?.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true\n\n        try {\n          // Try to refresh the token\n          const response = await axios.post(`${API_URL}/api/auth/refresh-token`, {}, { withCredentials: true })\n          const { accessToken: newToken } = response.data.data\n\n          localStorage.setItem(\"accessToken\", newToken)\n          setAccessToken(newToken)\n\n          // Retry the original request with new token\n          originalRequest.headers.Authorization = `Bearer ${newToken}`\n          return authAxios(originalRequest)\n        } catch (refreshError) {\n          // If refresh fails, logout user\n          logout()\n          return Promise.reject(refreshError)\n        }\n      }\n\n      return Promise.reject(error)\n    },\n  )\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        accessToken,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        isAuthenticated: !!accessToken,\n        authAxios,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}