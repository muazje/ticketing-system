{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/home/muaze/mini-project/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect, useCallback, useMemo } from \"react\";\nimport axios from \"axios\";\nimport { API_URL } from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\") || null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // ✅ Use useMemo to prevent re-creation of axios instance\n  const axiosInstance = useMemo(() => {\n    const instance = axios.create({\n      baseURL: API_URL,\n      withCredentials: true\n    });\n    instance.interceptors.request.use(config => {\n      if (accessToken) {\n        config.headers.Authorization = `Bearer ${accessToken}`;\n      }\n      return config;\n    }, error => Promise.reject(error));\n    instance.interceptors.response.use(response => response, async error => {\n      var _error$response;\n      const originalRequest = error.config;\n\n      // If error is not 401 or request has already been retried, reject\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) !== 401 || originalRequest._retry) {\n        return Promise.reject(error);\n      }\n      originalRequest._retry = true;\n      try {\n        const response = await axios.post(`${API_URL}/api/auth/refresh-token`, {}, {\n          withCredentials: true\n        });\n        const {\n          accessToken: newAccessToken\n        } = response.data.data;\n        setAccessToken(newAccessToken);\n        localStorage.setItem(\"accessToken\", newAccessToken);\n\n        // Retry the original request with new token\n        originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n        return axios(originalRequest);\n      } catch (refreshError) {\n        logout();\n        return Promise.reject(refreshError);\n      }\n    });\n    return instance;\n  }, [accessToken]);\n\n  // ✅ Load user on mount\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!accessToken) {\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axiosInstance.get(\"/api/auth/me\");\n        setUser(response.data.data.user);\n      } catch (error) {\n        logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUser();\n  }, [accessToken, axiosInstance]);\n\n  // ✅ Register user\n  const register = async userData => {\n    try {\n      setError(null);\n      const response = await axiosInstance.post(\"/api/auth/register\", userData);\n      const {\n        user,\n        accessToken\n      } = response.data.data;\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      setUser(user);\n      return user;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\");\n      throw error;\n    }\n  };\n\n  // ✅ Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const response = await axiosInstance.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      const {\n        user,\n        accessToken\n      } = response.data.data;\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      setUser(user);\n      return user;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Login failed\");\n      throw error;\n    }\n  };\n\n  // ✅ Logout user\n  const logout = useCallback(async () => {\n    try {\n      await axiosInstance.post(\"/api/auth/logout\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"accessToken\");\n      setAccessToken(null);\n      setUser(null);\n    }\n  }, [axiosInstance]);\n\n  // ✅ Update user profile\n  const updateProfile = async userData => {\n    try {\n      const response = await axiosInstance.put(\"/api/auth/profile\", userData);\n      setUser(response.data.data.user);\n      return response.data.data.user;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      setError(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Profile update failed\");\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      updateProfile,\n      isAuthenticated: !!user,\n      axiosInstance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"dRzPxwAazxurDNgc4X+gF3nU4+E=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","createContext","useState","useEffect","useCallback","useMemo","axios","API_URL","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","user","setUser","accessToken","setAccessToken","localStorage","getItem","loading","setLoading","error","setError","axiosInstance","instance","create","baseURL","withCredentials","interceptors","request","use","config","headers","Authorization","Promise","reject","response","_error$response","originalRequest","status","_retry","post","newAccessToken","data","setItem","refreshError","logout","fetchUser","get","register","userData","_error$response2","_error$response2$data","message","login","email","password","_error$response3","_error$response3$data","console","removeItem","updateProfile","put","_error$response4","_error$response4$data","Provider","value","isAuthenticated","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/muaze/mini-project/frontend/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport { createContext, useState, useEffect, useCallback, useMemo } from \"react\"\nimport axios from \"axios\"\nimport { API_URL } from \"../config\"\n\nexport const AuthContext = createContext()\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null)\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\") || null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  // ✅ Use useMemo to prevent re-creation of axios instance\n  const axiosInstance = useMemo(() => {\n    const instance = axios.create({\n      baseURL: API_URL,\n      withCredentials: true,\n    })\n\n    instance.interceptors.request.use(\n      (config) => {\n        if (accessToken) {\n          config.headers.Authorization = `Bearer ${accessToken}`\n        }\n        return config\n      },\n      (error) => Promise.reject(error)\n    )\n\n    instance.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config\n\n        // If error is not 401 or request has already been retried, reject\n        if (error.response?.status !== 401 || originalRequest._retry) {\n          return Promise.reject(error)\n        }\n\n        originalRequest._retry = true\n\n        try {\n          const response = await axios.post(`${API_URL}/api/auth/refresh-token`, {}, { withCredentials: true })\n          const { accessToken: newAccessToken } = response.data.data\n\n          setAccessToken(newAccessToken)\n          localStorage.setItem(\"accessToken\", newAccessToken)\n\n          // Retry the original request with new token\n          originalRequest.headers.Authorization = `Bearer ${newAccessToken}`\n          return axios(originalRequest)\n        } catch (refreshError) {\n          logout()\n          return Promise.reject(refreshError)\n        }\n      }\n    )\n\n    return instance\n  }, [accessToken])\n\n  // ✅ Load user on mount\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!accessToken) {\n        setLoading(false)\n        return\n      }\n\n      try {\n        const response = await axiosInstance.get(\"/api/auth/me\")\n        setUser(response.data.data.user)\n      } catch (error) {\n        logout()\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchUser()\n  }, [accessToken, axiosInstance])\n\n  // ✅ Register user\n  const register = async (userData) => {\n    try {\n      setError(null)\n      const response = await axiosInstance.post(\"/api/auth/register\", userData)\n      const { user, accessToken } = response.data.data\n\n      localStorage.setItem(\"accessToken\", accessToken)\n      setAccessToken(accessToken)\n      setUser(user)\n\n      return user\n    } catch (error) {\n      setError(error.response?.data?.message || \"Registration failed\")\n      throw error\n    }\n  }\n\n  // ✅ Login user\n  const login = async (email, password) => {\n    try {\n      setError(null)\n      const response = await axiosInstance.post(\"/api/auth/login\", { email, password })\n      const { user, accessToken } = response.data.data\n\n      localStorage.setItem(\"accessToken\", accessToken)\n      setAccessToken(accessToken)\n      setUser(user)\n\n      return user\n    } catch (error) {\n      setError(error.response?.data?.message || \"Login failed\")\n      throw error\n    }\n  }\n\n  // ✅ Logout user\n  const logout = useCallback(async () => {\n    try {\n      await axiosInstance.post(\"/api/auth/logout\")\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    } finally {\n      localStorage.removeItem(\"accessToken\")\n      setAccessToken(null)\n      setUser(null)\n    }\n  }, [axiosInstance])\n\n  // ✅ Update user profile\n  const updateProfile = async (userData) => {\n    try {\n      const response = await axiosInstance.put(\"/api/auth/profile\", userData)\n      setUser(response.data.data.user)\n      return response.data.data.user\n    } catch (error) {\n      setError(error.response?.data?.message || \"Profile update failed\")\n      throw error\n    }\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n        updateProfile,\n        isAuthenticated: !!user,\n        axiosInstance,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}